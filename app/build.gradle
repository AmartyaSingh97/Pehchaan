plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
}

android {
    namespace 'com.example.facerecognition'
    compileSdk 33

    defaultConfig {
        applicationId "com.example.facerecognition"
        minSdk 21
        targetSdk 33
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        mlModelBinding true
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.9.0'
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'com.google.android.material:material:1.8.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'org.tensorflow:tensorflow-lite-support:0.3.0'
    implementation 'org.tensorflow:tensorflow-lite-metadata:0.1.0'
    implementation 'org.tensorflow:tensorflow-lite-gpu:2.3.0'
    implementation 'androidx.navigation:navigation-fragment-ktx:2.5.3'
    implementation 'androidx.navigation:navigation-ui-ktx:2.5.3'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.4'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'

    implementation 'com.google.mlkit:face-detection:16.1.5'


    // The following line is optional, as the core library is included indirectly by camera-camera2
    implementation("androidx.camera:camera-core:1.3.0-alpha01")
    implementation("androidx.camera:camera-camera2:1.3.0-alpha01")
    // If you want to additionally use the CameraX Lifecycle library
    implementation("androidx.camera:camera-lifecycle:1.3.2")
    // If you want to additionally use the CameraX VideoCapture library
    implementation("androidx.camera:camera-video:1.3.0-alpha01")
    // If you want to additionally use the CameraX View class
    implementation("androidx.camera:camera-view:1.3.0-alpha01")
    // If you want to additionally add CameraX ML Kit Vision Integration
    implementation("androidx.camera:camera-mlkit-vision:1.3.0-alpha01")
    // If you want to additionally use the CameraX Extensions library
    implementation("androidx.camera:camera-extensions:1.3.0-alpha01")

    //Android Libraries
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'com.google.android.material:material:1.8.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.navigation:navigation-fragment:2.5.3'
    implementation 'androidx.navigation:navigation-ui:2.5.3'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.4'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'

    //ML Kit (To detect faces)
    implementation 'com.google.mlkit:face-detection:16.1.5'
    implementation 'com.google.android.gms:play-services-mlkit-face-detection:17.1.0'

    //GSON (Conversion of String to Map & Vice-Versa)
    implementation 'com.google.code.gson:gson:2.9.0'

    //Lottie-files (Splash-screen Animation)
    implementation "com.airbnb.android:lottie:5.2.0"

    // CameraX View class (For camera preview)
    implementation "androidx.camera:camera-core:1.3.0-alpha01"
    implementation "androidx.camera:camera-camera2:1.3.0-alpha01"
    implementation "androidx.camera:camera-lifecycle:1.3.2"
    implementation "androidx.camera:camera-view:1.3.0-alpha01"

    //TensorFlow Lite libraries (To recognize faces)
    implementation 'org.tensorflow:tensorflow-lite-task-vision:0.3.0'
    implementation 'org.tensorflow:tensorflow-lite-support:0.3.0'
    implementation 'org.tensorflow:tensorflow-lite:0.0.0-nightly-SNAPSHOT'
}